buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.4'
    }
}

plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "jaci.openrio.gradle.GradleRIO" version "2018.01.22"
    id "com.google.protobuf" version "0.8.4"
}

repositories {
    mavenCentral()
    maven {
         url  "https://dl.bintray.com/team6479/RobotRepo"
    }
 }

dependencies {
    compile group: 'team6479.robotrepo', name: 'robotlib', version: '1.2.0'
    compile wpilib()
    //compile ctre()
    //compile navx()
    compile openrio.powerup.matchData()
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.5.1'
}

protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = 'com.google.protobuf:protoc:3.5.1'
    }
}

def TEAM = 6479
def ROBOT_CLASS = "org.usfirst.frc.team6479.robot.Robot"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", jaci.openrio.gradle.frc.RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact('frcJava', jaci.openrio.gradle.frc.FRCJavaArtifact) {
            targets << "roborio"
        }
    }
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest jaci.openrio.gradle.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

telemetry {
    reportTelemetry = false
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5'
}
